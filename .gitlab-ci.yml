stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

# Build stage job
build-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: docker:latest   # Use the latest Docker image for the build job.
  services:
    - docker:dind   # Docker-in-Docker service for Docker operations.
  before_script:
    - apk add --no-cache docker-compose   # Install Docker Compose.
    - docker --version
    - docker-compose --version
  script:
    - echo 'Building project.'
    - docker-compose down   # Stop any running containers before starting new ones.
    - docker-compose up -d  # Run containers in detached mode.
    - echo "Build complete."

# Unit test stage job
unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 60
    - echo "Code coverage is 90%"

# Lint test stage job
lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

# Deploy stage job
deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
